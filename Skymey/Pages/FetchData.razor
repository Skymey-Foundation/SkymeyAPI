@page "/fetchdata"
@using Skymey.Data
@using SkymeyLib.Interfaces.Users.Login
@using SkymeyLib.Models.Users.Login
@inject WeatherForecastService ForecastService
@inject HttpClient httpClient
@inject IValidateToken token
@inject Blazored.LocalStorage.ILocalStorageService localStore

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var a = await localStore.GetItemAsync<string>(nameof(token.RefreshToken));
        if (a is not null)
        {
            Console.WriteLine(token.Token);
            token.Token = "Ddd";
            localStore.SetItemAsync<string>(nameof(token.RefreshToken), "d");
            Console.WriteLine(token.Token);
        }
        else
        {
            localStore.SetItemAsync<string>(nameof(token.RefreshToken), "+TzuKHdLmzhQyLUD5yfRVOSKS1dKJ69MKdYJBOifj5w=");
            token.RefreshToken = "+TzuKHdLmzhQyLUD5yfRVOSKS1dKJ69MKdYJBOifj5w=";
            token.Token = "+TzuKHdLmzhQyLUD5yfRVOSKS1dKJ69MKdYJBOifj5w=";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        

        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));

        //var httpClient2 = _httpClientFactory.CreateClient("ServerApi");
        //var response = await httpClient2.GetFromJsonAsync<LoginModel>("https://localhost:5001/api/SkymeyUserService/GetResult");
        var response2 = await httpClient.GetFromJsonAsync<LoginModel>("https://localhost:5001/api/SkymeyUserService/GetResult");

        //    Console.WriteLine(response);

        
    }
}